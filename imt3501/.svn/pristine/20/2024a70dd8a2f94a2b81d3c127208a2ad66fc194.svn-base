unit SDProtocol;

interface

const
  SDP_SUCCESS = '+';
  SDP_ERROR = '-';

  SDP_REQUEST_GET_READY = 'GET READY';
  SDP_READY = '100';
  SDP_READY_MESSAGE = ' READY';

  SDP_REQUEST_SWITCH_TO_SECUREDESKTOP = 'SWITCH TO SECURE DESKTOP';
  SDP_SWITCHED_TO_SECUREDESKTOP = '200';
  SDP_SWITCHED_TO_SECUREDESKTOP_MESSAGE = ' SWITCHED TO SECURE DESKTOP';

  SDP_REQUEST_SWITCH_TO_USERDESKTOP = 'SWITCH TO USER DESKTOP';
  SDP_SWITCHED_TO_USERDESKTOP = '201';
  SDP_SWITCHED_TO_USERDESKTOP_MESSAGE = ' SWITCHED TO USER DESKTOP';

  SDP_REQUEST_LAUNCH_APP = 'LAUNCH APP';
  SDP_LAUNCHED_APP = '300';
  SDP_LAUNCHED_APP_MESSAGE = ' DISPLAYED APPINFO';

  SDP_REQUEST_CLEAR_SECUREDESKTOP = 'CLEAR SECURE DESKTOP';
  SDP_CLEARED_SECUREDESKTOP = '800';
  SDP_CLEARED_SECUREDESKTOP_MESSAGE = ' CLEARED SECURE DESKTOP';

  SDP_REQUEST_GET_LIFESIGN = 'GET LIFESIGN';
  SDP_LIFESIGN = '999';
  SDP_LIFESIGN_MESSAGE = ' PRESENT';

  SDP_REQUEST_QUIT = 'QUIT';
  SDP_QUIT = '900';
  SDP_QUIT_MESSAGE = ' QUIT';

  SDP_SOAP_RESPONSE_LAUNCHED_APP = 300;
  SDP_SOAP_RESPONSE_LAUNCH_APP_FAILED = 399;
  SDP_SOAP_RESPONSE_RETURNED_FROM_APP = 800;
  SDP_SOAP_RESPONSE_RETURN_FROM_APP_FAILED= 899;

type
  TSDPState = (sdpCreated, sdpQuit, sdpIdle, sdpShowApplication, sdpHideApplication);

function SDMessageMatches(const AMessage: string; const AExpectedHeader: string): Boolean;

implementation

function SDMessageMatches(const AMessage: string; const AExpectedHeader: string): Boolean;
begin
  Result := (Copy(AMessage, 1, Length(AExpectedHeader)) = AExpectedHeader);
end;

end.
